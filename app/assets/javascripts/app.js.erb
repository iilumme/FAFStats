var FAFStats = angular.module('FAFStats', ['ngRoute', 'validation.match', 'ngFileUpload','ui.materialize'])
    .run(function($rootScope, StatsApi, FAFApi, $location, $route, ToastService) {

      /* RootScope Variables */
      $rootScope.players = [];
      $rootScope.session_user = null;

      /* User */

      StatsApi.getUserInSession().success(function(user){
        if (user !== ""){
          $rootScope.session_user = user;
        } else {
          $rootScope.session_user = null;
        }
      });

      /* Player Search */

      $rootScope.triggerAutocomplete = function() {
        if ($('.player-search').val().length < 3 && $rootScope.players.length > 0) {
          $rootScope.players = new Array();
        } else if ($('.player-search').val().length >= 3 && $rootScope.players.length <= 0) {
          FAFApi.searchForPlayersByName($('.player-search').val()).success(function(players) {
            $rootScope.players = players.data;
          });
        }
      };

      $rootScope.focusPlayerSearch = function() {
        $('.search-suggest').css('display', 'inline-block');
      };

      $('.search-suggest-link').mousedown(function() {
        mousedownHappened = true;
      });

      /* Close player search suggestions once unfocused*/

      $rootScope.blurPlayerSearch = function() {
        $('.search-suggest').css('display', 'none');
        $("#search").val("");
        $rootScope.players = [];
      };

      $rootScope.logout = function() {
        StatsApi.logout().success(function() {
          $location.path('/');
          window.location.reload();
          ToastService.getMessage('logout');
        });
      };

      $rootScope.goToPlayerPage = function(id) {
        $location.path("/player/" + id);
      };

      $rootScope.triggerPlayerSearch = function() {
        $location.path("/player/" + $rootScope.players[0].attributes.id);
      };

    })
    .config(function ($routeProvider) {

      /* Authentication */
      var requireAuthentication = function () {
        return {
          load: function ($q, $location, $rootScope) {
            var deferred = $q.defer();
            deferred.resolve();
            /* If player is a moderator/admin */
            if ($rootScope.session_user && $rootScope.session_user.usertype < 2) { // fire $routeChangeSuccess
              return deferred.promise;
            } else { // fire $routeChangeError
              $location.path('/');

              // I don't think this is still necessary:
              return $q.reject("'/'");
            }
          }
        };
      };

      $routeProvider
          .when('/', {
            controller: 'RootController',
            templateUrl: '<%= asset_path("static/root.html") %> '
          })
          .when('/comments', {
            controller: 'CommentsController',
            templateUrl: '<%= asset_path("dynamic/comments_index.html") %> '
          })
          .when('/player/:id', {
            controller: 'PlayerController',
            templateUrl: '<%= asset_path("dynamic/player_show.html") %> '
          })
          .when('/leaderboards', {
            controller: 'LeaderboardsController',
            templateUrl: '<%= asset_path("dynamic/leaderboards_show.html") %> '
          })
          .when('/games', {
            controller: 'GameIndexController',
            templateUrl: '<%= asset_path("dynamic/game_index.html") %> '
          })
          .when('/game/:id', {
            controller: 'GameController',
            templateUrl: '<%= asset_path("dynamic/game_show.html") %> '
          })
          .when('/login', {
            controller: 'LogInController',
            templateUrl: '<%= asset_path("dynamic/login.html") %> '
          })
          .when('/moderator', {
            controller: 'ModeratorController',
            templateUrl: '<%= asset_path("dynamic/moderator_page.html") %> ',
            resolve: requireAuthentication()
          });
    });
